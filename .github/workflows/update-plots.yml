name: Update Amtrak Plots

on:
  # Run every hour (stays within GitHub free tier of 2,000 min/month)
  schedule:
    - cron: '0 */2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:

# Allow only one workflow to run at a time to prevent race conditions
concurrency:
  group: update-plots
  cancel-in-progress: false

jobs:
  update:
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          pip install requests
      
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.2'
      
      - name: Install R packages
        run: |
          Rscript -e 'install.packages(c("ggplot2", "dplyr", "lubridate", "grid", "tools"), repos="https://cloud.r-project.org")'
      
      - name: Create train_data directories
        run: |
          rm -rf train_data
          mkdir -p train_data/north train_data/south
      
      - name: Generate image ID
        id: img_id
        run: echo "IMG_ID=$(date +%S%M%H%d%m%Y)" >> $GITHUB_OUTPUT
      
      - name: Collect train data
        run: |
          python3 data_collector.py ${{ steps.img_id.outputs.IMG_ID }}
      
      - name: Generate plots with R
        run: |
          Rscript plot_generator.r ${{ steps.img_id.outputs.IMG_ID }}
      
      - name: Update train data JSON
        run: |
          cat new_train_img_data.json > train_img_data.json
          rm new_train_img_data.json
      
      - name: Wait for plots to be generated
        run: sleep 10
      
      - name: Trim old plots
        run: |
          python3 trim_plots.py ${{ steps.img_id.outputs.IMG_ID }}
      
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Create public directory for GitHub Pages
        run: |
          mkdir -p public/api
          mkdir -p public/plots
          cp train_img_data.json public/api/trains.json
          cp -r plots/* public/plots/
          cat > public/index.html <<'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Amtrak Live - API</title>
              <meta charset="utf-8">
              <style>
                  body { font-family: system-ui, -apple-system, sans-serif; max-width: 800px; margin: 40px auto; padding: 20px; line-height: 1.6; }
                  code { background: #f4f4f4; padding: 2px 6px; border-radius: 3px; }
                  pre { background: #f4f4f4; padding: 15px; border-radius: 5px; overflow-x: auto; }
              </style>
          </head>
          <body>
              <h1>Amtrak Live API</h1>
              <p>This API provides real-time Amtrak Northeast Corridor train data and visualizations.</p>
              <h2>Endpoints</h2>
              <h3>Get Train Data</h3>
              <p><code>GET /api/trains.json</code></p>
              <p>Returns JSON array of active trains with their plot images and animation data.</p>
              <h3>Get Plot Images</h3>
              <p><code>GET /plots/FILENAME.png</code></p>
              <p>Access individual plot images.</p>
              <h2>Example Usage</h2>
              <pre><code>fetch('https://USERNAME.github.io/REPO/api/trains.json').then(res => res.json()).then(data => console.log(data));</code></pre>
              <h2>CORS</h2>
              <p>All endpoints support CORS and can be accessed from any domain.</p>
              <h2>Update Frequency</h2>
              <p>Data is updated automatically via GitHub Actions.</p>
              <p><a href="https://github.com/YOUR_USERNAME/YOUR_REPO">View on GitHub</a></p>
          </body>
          </html>
          EOF
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

